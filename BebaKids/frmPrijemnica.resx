<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAABILAAASCwAAAAAAAAAA
        AAAnJ9pMJyfa4ycn2rUnJ9pUJyfaCycn2gBVHyMAVR8jSVUfI51VHyMGVR8jAFUfI09VHyPcVR8jO1Uf
        IwAAAAAAJyfaTicn2vEnJ9rgJyfa6Scn2qYnJ9okSCFWAFUfIzFVHyPLVR8jIVUfIwBVHyOUVR8j/1Uf
        I2RVHyMAAAAAACcn2iwnJ9rdJyfaWycn2kcnJ9q8JyfaxSUn4SZZHhQVVR8jzlUfI0lVHyMUVR8j1VUf
        I+VVHyMpVR8jAAAAAAAnJ9oSJyfayicn2ngnJ9oAJyfaFCcn2qknJ9qxNSWjFlUfIrdVHyN6VR8jR1Uf
        I/pVHyOaVR8jAlUfIwAAAAAAJyfaAicn2qgnJ9qqJyfaAicn2gAnJ9ooJyfa2SYn3V5WHx+QVR8jr1Uf
        I5FVHyP0VR8jQlUfIwBVHyMAAAAAACcn2gAnJ9p+Jyfa0icn2hMnJ9oAJyfaBCcn2rImJ9+lVB8na1Uf
        I+RVHyPhVR8jt1UfIwpVHyMAAAAAAAAAAAAnJ9oAJyfaVCcn2uknJ9oxJyfaACcn2ggnJ9q8Jifewk8g
        PEtVHyP0VR8j+1UfI1xVHyMAVR8jAAAAAAAAAAAAJyfaACcn2jAnJ9rqJyfaWycn2gAnJ9pEJyfa8CYn
        3LdNIEMpVR8j5FUfI89VHyMXVR8jAAAAAAAAAAAAAAAAACcn2gAnJ9oWJyfa1icn2p8nJ9puJyfa3Ccn
        2v8mJ9x2Wh4QFVUfI9tVHyOlVR8jAVUfIwAAAAAAAAAAAAAAAAAnJ9oAJyfaBScn2rInJ9r9Jyfa/Scn
        2vMnJ9qgJCflFFgeFRFVHyPKVR8jzVUfIxhVHyMAAAAAAAAAAAAAAAAAJyfaACcn2gAnJ9qKJyfa9ycn
        2uUnJ9q8JyfaFign1QBVHyMAVR8jelUfI/9VHyOgVR8jE1UfIwBVHyMAAAAAACcn2mMnJ9oRJyfaXycn
        2u8nJ9p1Jyfa0icn2nQnJ9oAUx8qAFUfI09VHyP6VR8j/FUfI6VVHyMWVR8jAFUfIwAnJ9rbJyfajCcn
        2kQnJ9rxJyfaYScn2mUnJ9rdJyfaJEEicgBVHyMuVR8j7FUfI7dVHyPcVR8jq1UfIxZVHyMAJyfaVCcn
        2t4nJ9rDJyfa9Ccn2psnJ9qHJyfa+Ccn2kYzJaoAVR8jFlUfI9lVHyOeVR8jRlUfI99VHyOkVR8jFCcn
        2gEnJ9pCJyfavicn2vgnJ9r3Jyfa+ycn2ugnJ9oxLSbDAFUfIwZVHyO5VR8jx1UfIwtVHyNFVR8j3VUf
        I6cnJ9oAJyfaACcn2hEnJ9qSJyfa4Scn2r4nJ9plJyfaBCwmyABVHyMAVR8jblUfI81VHyMZVR8jAFUf
        I1ZVHyPdBiMAAAIjAAAAAwAAEAMAAAgHAACIBwAAiA8AAIgPAACADwAAgA8AAMGHAAAAgwAAAIEAAACA
        AAAAgAAAwMQAAA==
</value>
  </data>
</root>